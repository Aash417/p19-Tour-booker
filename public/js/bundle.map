{"version":3,"sources":["login.js","index.js"],"names":["REQUEST_TIMEOUT_SEC","timeout","Promise","_","reject","setTimeout","Error","sec","useFetch","url","uploadData","req","fetch","method","headers","body","JSON","stringify","race","res","json","data","ok","message","login","email","password","status","alert","window","location","assign","console","log","handleSubmit","e","preventDefault","target","value","formEl","reset","document","querySelector","addEventListener"],"mappings":"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","file":"bundle.map","sourceRoot":"","sourcesContent":["/* eslint-disable*/\r\n\r\nconst REQUEST_TIMEOUT_SEC = 5;\r\n\r\nconst timeout = sec =>\r\n  new Promise((_, reject) => {\r\n    setTimeout(\r\n      () => reject(Error(`Request timed out. Please try again later...`)),\r\n      sec * 1000\r\n    );\r\n  });\r\n\r\nconst useFetch = async (url, uploadData = null) => {\r\n  try {\r\n    const req = uploadData\r\n      ? fetch(url, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(uploadData)\r\n        })\r\n      : fetch(url);\r\n\r\n    const res = await Promise.race([req, timeout(REQUEST_TIMEOUT_SEC)]);\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw Error(data.message);\r\n\r\n    return data;\r\n  } catch (err) {\r\n    if (err.message === 'Failed to fetch')\r\n      err.message = `Unable to reach the server. Please check your internet connection...`;\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst login = async (email, password) => {\r\n  try {\r\n    const res = await useFetch('http://127.0.0.1:8000/api/v1/users/login', {\r\n      email,\r\n      password\r\n    });\r\n\r\n    if (res.status === 'success') {\r\n      alert('Logged in successfully');\r\n      window.setTimeout(() => {\r\n        location.assign('/');\r\n      }, 1000);\r\n    }\r\n    // if (res.status !== 'success') return;\r\n\r\n    // setTimeout(() => window.location.replace('/'), 1000);\r\n  } catch (err) {\r\n    console.log('error : ', err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nexport const handleSubmit = e => {\r\n  e.preventDefault();\r\n\r\n  const email = e.target.email.value;\r\n  const password = e.target.password.value;\r\n\r\n  login(email, password);\r\n\r\n  formEl.reset();\r\n};\r\n\r\n// formEl.addEventListener('submit', handleSubmit);\r\n","/* eslint-disable */\r\nimport { handleSubmit } from './login';\r\n\r\nconsole.log('hello from parcel');\r\n\r\ndocument.querySelector('.form').addEventListener('submit', handleSubmit);\r\n"]}